all_packages=(
	apt
	bluez
	crda
	dnsutils
	dosfstools
	dropbear
	ifupdown
	iputils-ping
	isc-dhcp-client
	kmod
	less
	libbluetooth3
	locales
	net-tools
	parted
	vim-tiny
	wireless-tools
	wpasupplicant
)

if [[ -n "$DIBS_WORKSPACE" ]] ; then
	if [[ -f "$DIBS_WORKSPACE/config/packages" ]] ; then
		mapfile -O ${#all_packages[@]} all_packages < "$DIBS_WORKSPACE/config/packages"
	fi
fi

IFS=$'\n' all_packages=($(sort <<< "${all_packages[*]}"))
IFS=' '

function packages_config()
{
	CONFIG_PACKAGES="$CONFIG_PACKAGE_USERDEFINED"

	for package in "${all_packages[@]}" ; do
		local var="CONFIG_PACKAGE_$(echo "${package}" | tr '[a-z-]' '[A-Z_]')"
		if [[ "y" == "${!var}" ]] ; then
			CONFIG_PACKAGES="$CONFIG_PACKAGES $package"
		fi
	done
}

function packages_generate()
{
	local f="$DIBS_WORKSPACE/config/Kconfig.packages"
	echo "# WARNING: This is an automatically-generated file, do not edit!" > $f
	echo "# If you need to add a package to the list please create a \"packages\"" >> $f
	echo "# file in this directory, with one package per line." >> $f
	echo >> $f
	echo "menu \"Packages\"" >> $f
	echo "	config PACKAGE_USERDEFINED" >> $f
	echo "		string \"User defined, space separated list\"" >> $f
	for package in "${all_packages[@]}" ; do
		local package_var=PACKAGE_$(echo ${package} | tr '[a-z-]' '[A-Z_]')
		echo "	config $package_var" >> $f
		echo "		bool \"$package\"" >> $f
	done
	echo "endmenu" >> $f
}

