function network_config()
{
	if [[ "y" = "$CONFIG_NETWORK_ETH0" ]] ; then
		CONFIG_NETWORK_ETH0_IP_TYPE=
		if [[ "y" = "$CONFIG_NETWORK_ETH0_IP_TYPE_DHCP" ]] ; then
			CONFIG_NETWORK_ETH0_IP_TYPE="dhcp"
		elif [[ "y" = "$CONFIG_NETWORK_ETH0_IP_TYPE_MANUAL" ]] ; then
			CONFIG_NETWORK_ETH0_IP_TYPE="manual"
		elif [[ "y" = "$CONFIG_NETWORK_ETH0_IP_TYPE_STATIC" ]] ; then
			CONFIG_NETWORK_ETH0_IP_TYPE="static"
		fi
	fi

	if [[ "y" = "$CONFIG_NETWORK_WLAN0" ]] ; then
		CONFIG_NETWORK_WLAN0_TYPE=
		if [[ "y" = "$CONFIG_NETWORK_WLAN0_TYPE_OPEN" ]] ; then
			CONFIG_NETWORK_WLAN0_TYPE="open"
		elif [[ "y" = "$CONFIG_NETWORK_WLAN0_TYPE_WEP" ]] ; then
			CONFIG_NETWORK_WLAN0_TYPE="wep"
		elif [[ "y" = "$CONFIG_NETWORK_WLAN0_TYPE_WPA" ]] ; then
			CONFIG_NETWORK_WLAN0_TYPE="wpa"
		elif [[ "y" = "$CONFIG_NETWORK_WLAN0_TYPE_WPA2" ]] ; then
			CONFIG_NETWORK_WLAN0_TYPE="wpa2"
		fi

		CONFIG_NETWORK_WLAN0_IP_TYPE=
		if [[ "y" = "$CONFIG_NETWORK_WLAN0_IP_TYPE_DHCP" ]] ; then
			CONFIG_NETWORK_WLAN0_IP_TYPE="dhcp"
		elif [[ "y" = "$CONFIG_NETWORK_WLAN0_IP_TYPE_MANUAL" ]] ; then
			CONFIG_NETWORK_WLAN0_IP_TYPE="manual"
		elif [[ "y" = "$CONFIG_NETWORK_WLAN0_IP_TYPE_STATIC" ]] ; then
			CONFIG_NETWORK_WLAN0_IP_TYPE="static"
		fi
	fi
}

function network_postinstall()
{
	if [[ "y" = "$CONFIG_NETWORK_ETH0" ]] ; then
		if [[ -d "$DIBS_TARGET/etc/network/interfaces.d" ]] ; then
			f="$DIBS_TARGET/etc/network/interfaces.d/eth0"
		else
			f="$DIBS_TARGET/etc/network/interfaces"
			echo >> "$f"
		fi

		echo "allow-hotplug eth0" >> "$f"
		echo "iface eth0 inet $CONFIG_NETWORK_ETH0_IP_TYPE" >> "$f"
		if [[ "static" = "$CONFIG_NETWORK_ETH0_IP_TYPE" ]] ; then
			echo -e "\taddress $CONFIG_NETWORK_ETH0_IP_ADDR" >> "$f"
			echo -e "\tnetmask $CONFIG_NETWORK_ETH0_IP_NETMASK" >> "$f"
			if [[ -n "$CONFIG_NETWORK_ETH0_IP_GATEWAY" ]] ; then
				echo -e "\tgateway $CONFIG_NETWORK_ETH0_IP_GATEWAY" >> "$f"
			fi
		fi
	fi

	if [[ "y" = "$CONFIG_NETWORK_WLAN0" ]] ; then
		if [[ -d "$DIBS_TARGET/etc/network/interfaces.d" ]] ; then
			f="$DIBS_TARGET/etc/network/interfaces.d/wlan0"
		else
			f="$DIBS_TARGET/etc/network/interfaces"
			echo >> "$f"
		fi

		echo "allow-hotplug wlan0" >> "$f"
		echo "iface wlan0 inet $CONFIG_NETWORK_WLAN0_IP_TYPE" >> "$f"
		if [[ "static" = "$CONFIG_NETWORK_WLAN0_IP_TYPE" ]] ; then
			echo -e "\taddress $CONFIG_NETWORK_WLAN0_IP_ADDR" >> "$f"
			echo -e "\tnetmask $CONFIG_NETWORK_WLAN0_IP_NETMASK" >> "$f"
			if [[ -n "$CONFIG_NETWORK_WLAN0_IP_GATEWAY" ]] ; then
				echo -e "\tgateway $CONFIG_NETWORK_WLAN0_IP_GATEWAY" >> "$f"
			fi
		fi
		if [[ "open" = "$CONFIG_NETWORK_WLAN0_TYPE" ]] || [[ "wep" = "$CONFIG_NETWORK_WLAN0_TYPE" ]]; then
			echo -e "\twireless-mode managed" >> "$f"
			echo -e "\twireless-essid $CONFIG_NETWORK_WLAN0_SSID" >> "$f"
		fi
		if [[ "wep" = "$CONFIG_NETWORK_WLAN0_TYPE" ]] ; then
			echo -e "\twireless-key $CONFIG_NETWORK_WLAN0_KEY" >> "$f"
		fi
		if [[ "wpa" = "$CONFIG_NETWORK_WLAN0_TYPE" ]] || [[ "wpa2" = "$CONFIG_NETWORK_WLAN0_TYPE" ]] ; then
			local psk=$(wpa_passphrase "$CONFIG_NETWORK_WLAN0_SSID" "$CONFIG_NETWORK_WLAN0_KEY" | grep -Po "(?<=^\tpsk=).*")
			echo -e "\twpa-ssid $CONFIG_NETWORK_WLAN0_SSID" >> "$f"
			echo -e "\twpa-psk $psk" >> "$f"
		fi
	fi

	echo "$CONFIG_NETWORK_HOSTNAME" > "$DIBS_TARGET/etc/hostname"
	cat > "$DIBS_TARGET/etc/hosts" << EOF
127.0.0.1	localhost
127.0.1.1	$CONFIG_NETWORK_HOSTNAME

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
EOF

	if [[ "y" = "$CONFIG_NETWORK_RESOLVER" ]] ; then
		f="$DIBS_TARGET/etc/resolv.conf"
		truncate -s 0 "$f"
		if [[ -n "$CONFIG_NETWORK_RESOLVER_DOMAIN" ]]; then
			echo "domain $CONFIG_NETWORK_RESOLVER_DOMAIN" >> "$f"
		fi
		if [[ -n "$CONFIG_NETWORK_RESOLVER_SEARCH" ]]; then
			echo "search $CONFIG_NETWORK_RESOLVER_SEARCH" >> "$f"
		fi
		if [[ -n "$CONFIG_NETWORK_RESOLOVER_NS1" ]]; then
			echo "nameserver $CONFIG_NETWORK_RESOLOVER_NS1" >> "$f"
		fi
		if [[ -n "$CONFIG_NETWORK_RESOLOVER_NS2" ]]; then
			echo "nameserver $CONFIG_NETWORK_RESOLOVER_NS2" >> "$f"
		fi
	fi
}
